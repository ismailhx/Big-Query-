To make better sense of these queries please read the schema for the datasets on BigQuery.
Below are explanations for the first few queries describing what the query is doing:

Query 1: 
Selects this: `bigquery-public-data.usa_names.usa_1910_current` dataset

SELECT*  FROM `bigquery-public-data.usa_names.usa_1910_current` LIMIT 1000



Query 2: 
Finding out for each state - how many people born in 2001 in the USA are named Ismail

SELECT
state,name,gender,year,number

  FROM `bigquery-public-data.usa_names.usa_1910_2013` 
  where name = "Ismail" and year = 2001
  LIMIT 100



Query 3:
weather.stn AS stn_ID -

Selects the stn attribute as stn_ID from the 'bigquery-public-data.noaa_gsod.gsod2015' table.



ANY_VALUE(station.name) AS name - 

ANY_VALUE The any_value function returns any random value of the selected column. (solves error 1055) 

(station.name) Return any value from the stations table’s column ‘name’  (there can be multiple stations with the same id - pick any random one)

AS name - Rename the column ‘name’



INNER JOIN – joins the tables on usaf and stn this finds all the stations run by the us airforce


WHERE
  station.state = "WA" AND station.usaf != "999999"
  GROUP BY stn_id
  
 - This filters the query to show only states in washington where the usaf number isnt 999999 and groups the queries by station id
 
  
  
  

SELECT
  weather.stn AS stn_ID, ANY_VALUE(station.name) AS name
  FROM
  `bigquery-public-data.noaa_gsod.stations` AS station
  INNER JOIN `bigquery-public-data.noaa_gsod.gsod2015` AS weather
  ON station.usaf = weather.stn
WHERE
  station.state = "WA" AND station.usaf != "999999"
  GROUP BY stn_id
LIMIT
  1000



Query 4:
WITH - names the new table we just made with our query ‘Ts’

ARRAY_AGG(STRUCT(title,score)) AS titles,- Picks all the contents from a column in an array. Take the title and score and combine them into an array.

EXTRACT(DATE FROM time_ts) AS date - Extracts the date from the timestamp

WHERE score IS NOT NULL AND title IS NOT NULL GROUP BY date - both fields arent null and the news articles for each date are selected

SELECT date, - From Ts select the date column
ARRAY(SELECT AS STRUCT title,score FROM UNNEST(titles) ORDER BY score DESC LIMIT 2) - Selects the created array for the unnest function and created structure with its contents. UNNEST’s the array creating a new table/array of titles ordered by score  


WITH Ts AS (
  SELECT
  ARRAY_AGG(STRUCT(title,score)) AS titles,
  EXTRACT(DATE FROM time_ts) AS date
  FROM `bigquery-public-data.hacker_news.stories`
  WHERE score IS NOT NULL AND title IS NOT NULL GROUP BY date
)
SELECT date,
ARRAY(SELECT AS STRUCT title,score FROM UNNEST(titles) ORDER BY score DESC LIMIT 2) 
AS TA
FROM Ts



Query 5:

WITH Names AS (
-WITH names the new table we just made with our query Names

SELECT name, SUM (number) AS freq
FROM `bigquery-public-data.usa_names.usa_1910_2013`
- Selects names and the number of times people are named that name as freq

 SELECT name, SUM(word_count) AS no_of_times
 FROM Names
 JOIN `bigquery-public-data.samples.shakespeare`
 ON STARTS_WITH(word,name)
-Selects the names column from the Names table and the word_count (number of times the word is mentioned in the corpus) is obtained by joining Shakespeare’s dataset on the word where the word starts with the name selected.


WITH Names AS (
  SELECT name, SUM (number) AS freq
  FROM `bigquery-public-data.usa_names.usa_1910_2013`
  GROUP BY name
  ORDER BY freq DESC LIMIT 100) 
  SELECT name, SUM(word_count) AS no_of_times
  FROM Names
  JOIN `bigquery-public-data.samples.shakespeare`
  ON STARTS_WITH(word,name)
  GROUP BY name 
  ORDER BY no_of_times DESC LIMIT 10
  
  
  
 Query 6:
 WHERE title LIKE '%She%' - Finds all the titles with ‘She’ in it (this doesn’t work for lowercase - it wont find ‘she’)

 
  SELECT title,
  FROM `bigquery-public-data.hacker_news.stories`
  WHERE title LIKE '%She%'
  GROUP BY title
  LIMIT 100
  
  
  
  Query 7:
    WHERE (REGEXP_CONTAINS(title, r"She")) - Finds all the titles with ‘She’ in it 
   
  SELECT title,
  FROM `bigquery-public-data.hacker_news.stories`
  WHERE (REGEXP_CONTAINS(title, r"She"))
  GROUP BY title
  LIMIT 100
